echo_c() {
  # 31 red, 32 green, 33 yellow, 34 blue, 35 magenta, 36 cyan, 37 white, 38 grey
  [ -z "$HASERLVER" ] && _text="\e[1;$1m$2\e[0m" || _text="$2"
  echo -e "$_text"
  unset _text
}

log() {
  # poor man's logrotate
  if [ -f "$LOG_FILE" ] && [ "$(wc -c $LOG_FILE | cut -d' ' -f1)" -gt $LOG_SIZE_LIMIT ]; then
    # redundant, but calling log() from within log() is wrong!
    echo "Rotate log file ${LOG_FILE}." >>$LOG_FILE
    [ "1" != "$quiet" ] && echo_c "$_color" "$_txt"
    mv "$LOG_FILE" "${LOG_FILE}.1"
  fi
  _txt="$(date +"%F %T") [${PID}:${plugin}] ${1}"
  _color="$2"; [ -z "$_color" ] && _color=38
  echo "$_txt" >>$LOG_FILE
  [ "1" != "$quiet" ] && echo_c "$_color" "$_txt"
  unset _txt
  unset _color
}

run() {
  echo "RESULT: $(eval "$1")"
}

log_and_run() {
  log "$1" 34
  run "$1"
}

quit_clean() {
  if [ -f "$LOCK_FILE" ]; then
    log "Remove lock file ${LOCK_FILE}."
    rm "$LOCK_FILE"
  fi
  log "Exit [$1]."
  exit $1
}

singleton() {
  log "Check lock file ${LOCK_FILE}."
  if [ -f "$LOCK_FILE" ] && ps | grep "^\s*\b$(cat "$LOCK_FILE")\b" >/dev/null; then
    log "Another instance running with PID $(cat "$LOCK_FILE")."
    exit 1
  fi
  printf "$PID\n" >$LOCK_FILE
  log "Create lock file ${LOCK_FILE}."
}

if [ -z "$plugin" ]; then
  log "ERROR: No plugin name found."
  log "This file should not be called directly!"
  quit_clean 2
fi

LOG_FILE=/tmp/webui.log
LOG_SIZE_LIMIT=50000
LOCK_FILE=/var/run/${plugin}-singleton.pid
CONFIG_FILE="/etc/webui/${plugin}.conf"
curl_timeout=100
PID=$$

log "Plugin ${plugin} initialized."

if [ -f "$CONFIG_FILE" ]; then
  log "Reading configuration from ${CONFIG_FILE}."
  source "$CONFIG_FILE"
else
  log "Configuration file ${CONFIG_FILE} not found."
fi
